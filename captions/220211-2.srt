1
00:00:03,160 --> 00:00:06,430
All right, those bells mean it's going to get going, so welcome back

2
00:00:06,430 --> 00:00:12,100
to the Friday afternoon, approaching the end of this

3
00:00:12,100 --> 00:00:15,310
week.  I may not have the recording going the whole

4
00:00:15,310 --> 00:00:18,190
tutorial session today, but I figured it should

5
00:00:18,340 --> 00:00:18,850
pick up the number for the

6
00:00:21,930 --> 00:00:25,380
attendance system for this session:

7
00:00:27,480 --> 00:00:30,330
one zero eight

8
00:00:34,520 --> 00:00:35,240
three eight six.

9
00:00:43,270 --> 00:00:45,550
The plan for today, you might have guessed by

10
00:00:45,550 --> 00:00:50,530
what I have on the screen already, is just to wrap up going

11
00:00:50,530 --> 00:00:54,190
through that Python programming demo notebook,

12
00:00:54,300 --> 00:00:58,090
just to make sure everything in there is brought

13
00:00:58,090 --> 00:01:01,960
up more together and a chance to see what is going

14
00:01:01,960 --> 00:01:05,620
on. This is the last detail for this. The first

15
00:01:05,620 --> 00:01:08,650
parts of that computer project is due next

16
00:01:08,650 --> 00:01:13,780
Thursday, and I have already some questions about

17
00:01:13,780 --> 00:01:18,250
it if there are immediate ones that are want to

18
00:01:18,250 --> 00:01:21,130
bring up here in the group. This is a time for

19
00:01:21,130 --> 00:01:21,490
that.

20
00:01:25,270 --> 00:01:25,960
Meantime.

21
00:01:28,990 --> 00:01:33,490
This. System connected, running online and get

22
00:01:33,490 --> 00:01:37,450
back to the point where we set aside this last

23
00:01:37,450 --> 00:01:42,740
week to look at the. That example of the

24
00:01:43,040 --> 00:01:46,520
programming for that that showed up in the one of

25
00:01:46,520 --> 00:01:47,390
the lecture notes.

26
00:01:49,750 --> 00:01:52,680
Know that was covering that inversed transform

27
00:01:52,680 --> 00:01:57,750
sampling in the creation of a histogram and the

28
00:01:57,750 --> 00:02:01,230
comparison of that histogram to the expected

29
00:02:01,230 --> 00:02:07,290
probability distribution and actually the next and

30
00:02:07,290 --> 00:02:09,650
final part in this double.

31
00:02:12,450 --> 00:02:15,110
Is to some extent equivalent to that was that

32
00:02:15,150 --> 00:02:19,350
given that the lecture where we're grabbing some

33
00:02:19,350 --> 00:02:22,380
random numbers out of a probability distribution

34
00:02:22,830 --> 00:02:26,890
and adding them to some running total, the the

35
00:02:26,970 --> 00:02:30,510
roulette game, that was the total of winnings

36
00:02:30,540 --> 00:02:33,570
minus that's that were put in. And the more

37
00:02:33,570 --> 00:02:36,930
general context that can be applied to bottom, not

38
00:02:36,930 --> 00:02:40,110
only the Electoral College, those are things we

39
00:02:40,110 --> 00:02:43,470
have this random walk where we take some steps of

40
00:02:43,470 --> 00:02:46,620
a certain length here with the

41
00:02:49,200 --> 00:02:53,030
length of each step being chosen randomly

42
00:02:53,610 --> 00:02:57,570
according to this probability distribution that we

43
00:02:57,570 --> 00:03:00,030
set up based on inverse transfer of sampling. So

44
00:03:00,480 --> 00:03:05,370
particular the distribution here. Is P of X is X

45
00:03:05,370 --> 00:03:13,560
over two, so it's weighted towards larger steps of

46
00:03:13,560 --> 00:03:21,390
length to are maximally probable. And the cut off

47
00:03:21,390 --> 00:03:23,850
on the size of the step from zero to two is just

48
00:03:23,850 --> 00:03:26,640
required to ensure that this probability

49
00:03:26,640 --> 00:03:29,990
distribution integrates to a hundred percent over

50
00:03:30,000 --> 00:03:31,020
its entire range.

51
00:03:34,010 --> 00:03:34,560
So

52
00:03:37,800 --> 00:03:38,310
from.

53
00:03:41,050 --> 00:03:44,890
I think we may have done last time the from this

54
00:03:44,890 --> 00:03:48,870
distribution, it's an easy integration to compute

55
00:03:48,880 --> 00:03:53,710
both the the true mean and the variance of this

56
00:03:53,710 --> 00:04:00,470
probability distribution. So I'll set that. Aside

57
00:04:00,470 --> 00:04:03,930
for now and try to remember and see witness, it's

58
00:04:03,950 --> 00:04:06,770
never one, certainly.

59
00:04:08,840 --> 00:04:12,110
Yeah, that's the first thing we did

60
00:04:14,420 --> 00:04:19,130
with Peter was checking that distribution. I have

61
00:04:19,130 --> 00:04:22,490
some recollection of going through the computation

62
00:04:22,880 --> 00:04:26,510
of that. We had standard deviation on the board

63
00:04:26,510 --> 00:04:30,260
last time. So I won't repeat that here. What we

64
00:04:30,260 --> 00:04:34,500
want to implement in. The.

65
00:04:36,640 --> 00:04:38,300
Want until now is.

66
00:04:41,360 --> 00:04:44,510
Organizing in some sensible way that we can

67
00:04:44,510 --> 00:04:48,560
understand multiple groups over these random

68
00:04:48,560 --> 00:04:51,470
numbers where we have some number of repetitions

69
00:04:51,470 --> 00:04:54,230
of this whole random thought process, each of

70
00:04:54,230 --> 00:04:57,440
which has some number of steps with step lengths

71
00:04:57,440 --> 00:05:01,190
randomly drawn from this probability distribution

72
00:05:01,190 --> 00:05:02,150
that we've defined.

73
00:05:04,480 --> 00:05:10,640
And in fact, going further here, it added a third

74
00:05:10,790 --> 00:05:15,320
level of forelimbs. This outer level is

75
00:05:15,320 --> 00:05:18,900
considering. Different options for the total

76
00:05:18,900 --> 00:05:24,210
number of steps in the walk, so as we go over each

77
00:05:24,420 --> 00:05:27,990
and step in this outermost for loop within which

78
00:05:28,530 --> 00:05:32,670
everything from that I've highlighted has been

79
00:05:32,670 --> 00:05:37,440
inducted. Indicating that it is being repeated for

80
00:05:37,440 --> 00:05:43,070
every. Integer in this array that's being called a

81
00:05:43,080 --> 00:05:43,500
step.

82
00:05:45,750 --> 00:05:48,570
So first we go through this loop with 10 steps in

83
00:05:48,570 --> 00:05:49,170
each walk.

84
00:05:51,250 --> 00:05:56,470
And with that fixed number of steps, we have to.

85
00:05:58,250 --> 00:06:03,170
Some over the given number of repetitions or

86
00:06:03,180 --> 00:06:06,080
number of samples is written here that we are

87
00:06:06,080 --> 00:06:12,830
doing, and this was set up above to be one hundred

88
00:06:12,830 --> 00:06:16,820
thousand samples. It took zero seconds to compute

89
00:06:16,820 --> 00:06:19,460
a histogram of those hundred thousand random

90
00:06:19,460 --> 00:06:21,830
numbers from the distribution. But now we are.

91
00:06:23,090 --> 00:06:27,740
Getting one hundred thousand samples for every

92
00:06:27,740 --> 00:06:32,090
step in this walk of ten steps and the final

93
00:06:32,090 --> 00:06:35,330
innermost loop at three levels of invitation to

94
00:06:35,330 --> 00:06:39,950
Python is carrying out that step. So we say that

95
00:06:40,160 --> 00:06:43,400
our water starts out at some distance zero from a

96
00:06:43,400 --> 00:06:49,820
starting point. And with every step. It takes it

97
00:06:49,820 --> 00:06:53,240
adds to that distance some number given by.

98
00:06:55,640 --> 00:06:59,540
The transform that we related to the probability

99
00:06:59,540 --> 00:07:03,140
distribution, if I developed in this case to route

100
00:07:03,830 --> 00:07:07,370
times in uniform, random number drawn between zero

101
00:07:07,370 --> 00:07:09,500
and one with a flat probability distribution.

102
00:07:11,600 --> 00:07:16,760
And then at the end of those steps, we have some

103
00:07:16,760 --> 00:07:20,360
results for the final position of the walker

104
00:07:20,510 --> 00:07:27,740
that's held this running somebody and we. Add that

105
00:07:27,740 --> 00:07:32,120
results to the very last elements in this rain

106
00:07:32,120 --> 00:07:38,090
called El, which I'm calling out to, so a race to

107
00:07:38,090 --> 00:07:41,690
find up there. Zero is appended before we start

108
00:07:41,690 --> 00:07:43,970
going through the samples. And then with each

109
00:07:43,970 --> 00:07:48,020
sample we add or accumulate in this running solid,

110
00:07:48,740 --> 00:07:52,040
the position, the final position of the water

111
00:07:52,040 --> 00:07:58,190
attribute that mark. So l I called, I chose that

112
00:07:58,190 --> 00:08:00,770
name probably because I had in mind this was the

113
00:08:00,860 --> 00:08:04,860
length of the walk after a certain number of steps.

114
00:08:05,930 --> 00:08:08,660
So once we've gone through a hundred thousand

115
00:08:08,660 --> 00:08:14,150
repetitions of those random walks with some number

116
00:08:14,150 --> 00:08:18,680
of steps, we just normalize the length by the

117
00:08:18,680 --> 00:08:21,050
number of samples that I've got added of added in

118
00:08:21,710 --> 00:08:24,920
and print that out, which will finally take more

119
00:08:24,920 --> 00:08:28,850
than zero seconds. As you can see, even with 50,

120
00:08:28,850 --> 00:08:32,300
60, 80 steps being repeated, one hundred thousand

121
00:08:32,300 --> 00:08:37,670
times is taking a total, only about 10 seconds for

122
00:08:37,670 --> 00:08:42,970
all eight of those independently. Now, if we were

123
00:08:42,970 --> 00:08:45,190
pressed for time or we're trying to do a larger

124
00:08:45,190 --> 00:08:49,180
number of samples, we could. Take a shortcut and

125
00:08:50,410 --> 00:08:53,970
and say that in the process of taking 80 step

126
00:08:53,980 --> 00:08:56,530
random walks, if we look at just the first 10

127
00:08:56,530 --> 00:08:59,140
steps of those, then those are ten steps, random

128
00:08:59,140 --> 00:09:02,200
walks. And similarly, the first 20 steps are 20

129
00:09:02,200 --> 00:09:04,990
step random walks. And we could have got numbers

130
00:09:04,990 --> 00:09:07,570
for we could have gotten all eight of these

131
00:09:07,570 --> 00:09:10,990
numbers with some statistical fluctuations just by

132
00:09:10,990 --> 00:09:11,620
looking at

133
00:09:13,780 --> 00:09:18,430
seven some blocks of the final 80 step random box.

134
00:09:18,470 --> 00:09:22,330
Now, if we were to do that, the results would be

135
00:09:22,330 --> 00:09:27,340
correlated. The ADF walks would have built within

136
00:09:27,340 --> 00:09:31,870
the seven mixed up blocks and therefore depend on

137
00:09:31,870 --> 00:09:36,370
how the 70 that walks turned out. But it may be an

138
00:09:36,370 --> 00:09:39,520
interesting question you can do on your own to see

139
00:09:39,520 --> 00:09:43,540
how significant those correlations are for a given

140
00:09:44,200 --> 00:09:48,400
number of samples and whether it would cause

141
00:09:48,400 --> 00:09:51,160
problems to do that on computational shortcuts.

142
00:09:52,470 --> 00:09:55,560
But for now, we can see a nice linear trend in the

143
00:09:55,560 --> 00:10:00,330
final positions of the walker with the number of

144
00:10:00,330 --> 00:10:05,800
steps. Which is pretty much what we would expect

145
00:10:06,610 --> 00:10:09,400
based on the central limit theorem, especially

146
00:10:09,400 --> 00:10:12,160
because we have this probability distribution

147
00:10:12,160 --> 00:10:16,030
where the walks are always non-negative. So the

148
00:10:16,030 --> 00:10:18,640
water is always going in the same direction. The

149
00:10:18,640 --> 00:10:22,540
question is just how much it stops. Think at this

150
00:10:22,540 --> 00:10:26,350
point in time, and in particular from the central

151
00:10:26,350 --> 00:10:34,090
limit theorem would expect that the, um, the final

152
00:10:34,090 --> 00:10:36,520
position, if we average things out with a

153
00:10:36,520 --> 00:10:39,310
sufficient number of repetitions, would just be

154
00:10:39,670 --> 00:10:44,170
those insteps times, the median length of a step

155
00:10:44,170 --> 00:10:47,410
that you have for third's. That was computed

156
00:10:48,280 --> 00:10:50,650
exactly for the simple distribution, which is

157
00:10:51,130 --> 00:10:56,740
something we can test by fitting these data to a

158
00:10:56,740 --> 00:11:01,420
straight line. Holding on to that of any questions

159
00:11:01,420 --> 00:11:05,290
about this process of how groups were nested

160
00:11:05,290 --> 00:11:08,350
within groups, within news in order to get lots of

161
00:11:08,350 --> 00:11:11,650
repetitions of random walks with various white

162
00:11:11,690 --> 00:11:12,190
flags.

163
00:11:17,760 --> 00:11:18,810
Everyone seems.

164
00:11:21,110 --> 00:11:27,230
Happy with that process and the fitting, maybe a

165
00:11:27,650 --> 00:11:32,060
more interesting application of this code, because

166
00:11:32,060 --> 00:11:33,830
we're doing something more than just adding the

167
00:11:33,830 --> 00:11:38,900
result of well organized way, we want to take some

168
00:11:39,260 --> 00:11:43,740
data that we've. Accumulated sarcastically based

169
00:11:43,740 --> 00:11:45,960
on pseudo random numbers and.

170
00:11:49,540 --> 00:11:53,500
Do some analysis of it just in Python itself, in

171
00:11:53,500 --> 00:11:56,830
order to extract the key features, describing it

172
00:11:56,830 --> 00:12:00,970
in this case, the the slope and intercept of what

173
00:12:00,970 --> 00:12:03,850
looks here like a straight line. So we'll assume

174
00:12:03,850 --> 00:12:08,350
that this walk line is a straight line. The walk

175
00:12:08,350 --> 00:12:13,900
is some constant eight times the number of steps,

176
00:12:14,380 --> 00:12:16,900
plus some concept B that we expect to be zero

177
00:12:18,520 --> 00:12:22,630
since when the number of steps is zero and where

178
00:12:22,630 --> 00:12:29,020
it started and there is built in to Python A.

179
00:12:30,370 --> 00:12:35,590
Polynomial fitting subroutine that can do this

180
00:12:35,590 --> 00:12:42,500
just. The single line of code we take, this

181
00:12:43,340 --> 00:12:48,290
polynomial fitting subroutine, we tell it the. X

182
00:12:48,290 --> 00:12:51,770
values, we want to fit as an array. That's the

183
00:12:52,100 --> 00:12:56,370
walk lengths defined. In the previous block of

184
00:12:56,370 --> 00:13:01,500
code, the next argument is the the why variables

185
00:13:01,500 --> 00:13:05,190
also in an array of the same size so that each X

186
00:13:05,460 --> 00:13:09,870
is associated to a corresponding Y value. So those

187
00:13:09,870 --> 00:13:12,870
two arrays together define the points to be fit.

188
00:13:13,350 --> 00:13:15,900
And then this final argument is just the order of

189
00:13:15,900 --> 00:13:18,510
the polynomial fitting function that is being

190
00:13:18,510 --> 00:13:23,460
applied, which can be anything up to in this case,

191
00:13:23,460 --> 00:13:26,580
about seven, six or seven, so that there's enough

192
00:13:26,580 --> 00:13:30,210
degrees of freedom to actually constrain. The

193
00:13:31,440 --> 00:13:33,540
coefficients that appear in that polynomial.

194
00:13:37,540 --> 00:13:38,250
If I.

195
00:13:40,260 --> 00:13:43,650
But this hit pretty quickly, I've gone ahead and

196
00:13:43,650 --> 00:13:48,030
extracted these parameters and be doing what that

197
00:13:48,030 --> 00:13:51,540
output looked like, but if I didn't have that

198
00:13:51,540 --> 00:13:52,170
knowledge.

199
00:13:55,970 --> 00:14:01,410
Should have done things I could just have. Printed

200
00:14:01,430 --> 00:14:06,410
the output. We'll see what all is returned, and

201
00:14:06,410 --> 00:14:11,540
indeed, it is just these two numbers, one of which

202
00:14:11,540 --> 00:14:14,790
is very close to zero with some sort of percent

203
00:14:14,810 --> 00:14:18,500
level or even permitted level non-zero value that

204
00:14:18,500 --> 00:14:20,960
we could attribute to statistical fluctuations,

205
00:14:20,960 --> 00:14:25,280
the other of which is very close to that mean of

206
00:14:25,280 --> 00:14:30,800
the single step length for thirds. And if I were

207
00:14:30,800 --> 00:14:35,510
to put these points to a cubic function rather

208
00:14:35,510 --> 00:14:38,720
than a linear one, get out.

209
00:14:41,200 --> 00:14:44,290
Three things close to zero, and then the one

210
00:14:44,290 --> 00:14:49,630
remaining non-zero coefficients is recognizable as

211
00:14:49,630 --> 00:14:53,850
four thirds with a little less precision. And this

212
00:14:54,270 --> 00:14:58,720
can show us the relationship between this, the

213
00:14:58,890 --> 00:15:03,940
output and the. The terms that appear in the

214
00:15:03,940 --> 00:15:07,540
polynomials highest power term in this case and

215
00:15:08,170 --> 00:15:12,100
and Cuba term in this, Kubelik fit as the first

216
00:15:12,100 --> 00:15:19,150
coefficient and the index zero the and squared

217
00:15:19,150 --> 00:15:23,230
term has the second coefficient. The end term for

218
00:15:23,230 --> 00:15:26,260
the linear dependence has that third coefficient

219
00:15:26,260 --> 00:15:31,090
of the closet intercept is the very last one. So

220
00:15:31,090 --> 00:15:35,050
if I undo those changes, I could just as well have

221
00:15:35,980 --> 00:15:40,180
generalized this by saying that the intercept is

222
00:15:40,180 --> 00:15:43,870
always going to be the last element of this output

223
00:15:43,870 --> 00:15:48,550
array and then the linear still interceded is the

224
00:15:48,550 --> 00:15:53,170
second to last index minus two, which gets us back

225
00:15:53,170 --> 00:15:56,800
to where we started. And that also provides

226
00:15:56,950 --> 00:15:59,740
through this that part of the library that we

227
00:16:00,040 --> 00:16:01,330
looked at for the histogram.

228
00:16:03,660 --> 00:16:08,970
A set of tools to plot these results, in addition

229
00:16:08,970 --> 00:16:15,690
to the data points that walk length and l values

230
00:16:16,740 --> 00:16:24,810
that we showed up here and put into the fit with

231
00:16:24,820 --> 00:16:29,480
some options for how they are to appear. It's

232
00:16:30,110 --> 00:16:33,780
reasonably straightforward to. Continuous

233
00:16:33,780 --> 00:16:38,180
functions. On top of those points where the trick

234
00:16:38,180 --> 00:16:45,190
is to. Come up with some densely spaced set of

235
00:16:45,190 --> 00:16:49,150
points along that x axis, ranging from zero to 80

236
00:16:49,150 --> 00:16:51,430
in this case and steps of zero point one. There

237
00:16:51,910 --> 00:16:55,070
are going to be a hundred points in this in the

238
00:16:55,120 --> 00:17:04,000
array that this. A range routine provides. And

239
00:17:04,000 --> 00:17:09,840
then by some of Python's Magic, the. We can define

240
00:17:10,260 --> 00:17:17,410
happy for that function to be just the cause of a

241
00:17:17,410 --> 00:17:22,470
times X plus the cost of B, which automatically

242
00:17:22,470 --> 00:17:26,310
inherits the same array dimensions as an X, and

243
00:17:26,310 --> 00:17:29,040
sorry for all the documentation that keeps popping

244
00:17:29,040 --> 00:17:34,470
up when I don't move the mouse quickly enough. So

245
00:17:35,670 --> 00:17:40,590
plotting then those points X and the P that are

246
00:17:40,590 --> 00:17:43,920
produced from them juice, that orange line that we

247
00:17:43,920 --> 00:17:49,650
can check by is in perfect agreement with the data

248
00:17:49,650 --> 00:17:55,900
points computed above. So that's. How fitting or

249
00:17:55,900 --> 00:17:59,920
at least polynomial fitting works in Python? It's

250
00:17:59,920 --> 00:18:04,680
also possible to. Fits, there are Pythonic

251
00:18:04,830 --> 00:18:07,740
utilities out there that without much more work

252
00:18:07,740 --> 00:18:11,130
than this, can fit a set of data to essentially

253
00:18:11,130 --> 00:18:13,080
any function. You can like that. As long as you

254
00:18:13,080 --> 00:18:16,350
can write down period for that function, you will

255
00:18:16,350 --> 00:18:21,120
use that to minimize the deviations between the

256
00:18:21,120 --> 00:18:23,370
data points and the filter constructs.

257
00:18:25,960 --> 00:18:29,130
Which this demo doesn't get into since then,

258
00:18:29,140 --> 00:18:33,460
there's a trick that can be used to simplify it

259
00:18:33,460 --> 00:18:36,730
into some types of fits. For instance, if we were

260
00:18:37,450 --> 00:18:40,240
looking at this data and we were thinking, well.

261
00:18:41,760 --> 00:18:44,280
It looks pretty linear as.

262
00:18:47,430 --> 00:18:50,430
As the clock length dependence on the number of

263
00:18:50,430 --> 00:18:53,310
steps that maybe we don't want to assume it's

264
00:18:53,310 --> 00:18:59,750
linear. We could. Either fit it to some polynomial,

265
00:18:59,750 --> 00:19:04,970
as we did in Kubic case just a few minutes ago, or

266
00:19:05,660 --> 00:19:09,230
try to fit this as a general Powerwall, which is

267
00:19:09,230 --> 00:19:14,720
to say fitting L is proportional to the number of

268
00:19:14,720 --> 00:19:19,960
steps to some unknown power alpha. And try to

269
00:19:19,960 --> 00:19:23,170
extract from that the power elfa describing the

270
00:19:23,770 --> 00:19:29,310
leading dependence of this fit on an. So this

271
00:19:29,940 --> 00:19:31,980
automatically implements what we already knew,

272
00:19:31,980 --> 00:19:35,640
that when N equals zero equals zero net

273
00:19:36,030 --> 00:19:38,700
intercepted, the linear fit vanishes that's

274
00:19:38,700 --> 00:19:43,440
imposed here. And this is actually well, as I said,

275
00:19:43,650 --> 00:19:48,250
it's certainly possible to use Python to fit to it

276
00:19:48,270 --> 00:19:53,050
in the Powerwall. But it's already possible to do

277
00:19:53,050 --> 00:19:57,580
this using that same. Polynomial fit that we are

278
00:19:57,610 --> 00:20:02,500
looked at just by taking the log of both sides and

279
00:20:02,500 --> 00:20:05,710
using the properties of the log to pull down that

280
00:20:06,220 --> 00:20:10,360
power on in as the coefficient on a log in term.

281
00:20:11,370 --> 00:20:16,500
Plus, this multiplicative factor C, which becomes

282
00:20:16,500 --> 00:20:22,650
a coefficient Moxey. So in terms of what rythm

283
00:20:22,650 --> 00:20:25,530
about the logarithm and this is just a linear

284
00:20:25,530 --> 00:20:29,310
function, Y equals Alpha times X, so it's a

285
00:20:29,310 --> 00:20:29,940
constant.

286
00:20:32,120 --> 00:20:37,780
And in Python, we implement this is. Setting a

287
00:20:37,790 --> 00:20:41,900
blog of that array of what lengths from 10 to 80

288
00:20:42,650 --> 00:20:47,020
of the law of the walk like this, the number of

289
00:20:47,020 --> 00:20:50,410
steps this here is the actual distance that is

290
00:20:50,410 --> 00:20:54,520
traveled by the walk and then just fit that to

291
00:20:55,240 --> 00:21:00,970
another linear fit where I can generalize this to

292
00:21:00,970 --> 00:21:03,970
pull out those last two.

293
00:21:06,100 --> 00:21:09,340
Elements of the output array that correspond to

294
00:21:09,670 --> 00:21:13,840
the coefficients of the polynomial being fit, and

295
00:21:13,840 --> 00:21:19,010
we find that. So Alpha, then, is the coefficient

296
00:21:19,010 --> 00:21:23,390
of the linear term, it comes out to be one, two,

297
00:21:23,810 --> 00:21:25,760
maybe better precision than we had any right to

298
00:21:25,760 --> 00:21:29,810
expect, about five significant figures from that

299
00:21:29,810 --> 00:21:33,620
quick 10 second calculation. And see, then, is the

300
00:21:34,250 --> 00:21:39,110
exponential of the constant term, which we expect

301
00:21:39,110 --> 00:21:46,190
to be from the work above that mean of the single

302
00:21:46,190 --> 00:21:51,940
step probability distribution. And indeed. That is

303
00:21:51,940 --> 00:21:55,090
recovered again to into terbil level precision and

304
00:21:55,090 --> 00:21:57,940
the thought that we put out looks essentially the

305
00:21:57,940 --> 00:22:01,330
same as the linear fit because it essentially is a

306
00:22:01,330 --> 00:22:06,090
linear fit. I'm just putting that power law types

307
00:22:06,310 --> 00:22:11,020
of our alpha rather than what is exactly a

308
00:22:11,020 --> 00:22:11,770
straight line.

309
00:22:15,000 --> 00:22:20,130
So that is what is in the Python program in

310
00:22:20,140 --> 00:22:23,310
general, any questions about anything that's come

311
00:22:23,310 --> 00:22:25,500
up so far or.

312
00:22:27,560 --> 00:22:30,250
Anything else to do with that computer project

313
00:22:30,290 --> 00:22:31,150
next Thursday?

314
00:22:47,820 --> 00:22:48,900
Goodness. So.

315
00:22:55,510 --> 00:23:01,940
With that. I guess crash course through Python

316
00:23:01,940 --> 00:23:05,810
programming dealt with in some time related. There

317
00:23:05,810 --> 00:23:08,660
are some funny things we can do this afternoon

318
00:23:09,140 --> 00:23:14,750
that build up upon some of the stuff that. Came up

319
00:23:14,750 --> 00:23:17,540
this morning, so there are two options.

320
00:23:20,430 --> 00:23:26,670
Which I made, one of which may be best to postpone

321
00:23:26,690 --> 00:23:30,170
until next week, when we'll have talked a bit

322
00:23:30,170 --> 00:23:34,540
about Serling's the. But only a passing.

323
00:23:38,240 --> 00:23:41,990
What we can go to now is.

324
00:23:44,290 --> 00:23:44,910
Turnon.

325
00:23:47,380 --> 00:23:48,670
This dog of.

326
00:23:50,890 --> 00:23:53,920
One of the things we looked at this morning, which

327
00:23:53,920 --> 00:23:54,430
was

328
00:23:57,520 --> 00:24:03,100
a step. In the derivation of that second ball of

329
00:24:03,150 --> 00:24:04,080
the animals.

330
00:24:11,760 --> 00:24:16,360
I'm waiting for. He's got to make up.

331
00:24:20,230 --> 00:24:22,560
Would this be better focused?

332
00:24:35,170 --> 00:24:35,380
A.

333
00:24:40,020 --> 00:24:42,690
Maybe that's the best it'll be able to do. We had

334
00:24:42,690 --> 00:24:45,310
this equation twenty one.

335
00:24:48,490 --> 00:24:52,040
Here we were just interested in establishing an.

336
00:24:54,020 --> 00:24:57,860
That's reestablishing a lower bound of the

337
00:24:57,860 --> 00:25:01,190
possible number of microstates, equivalently, the

338
00:25:01,190 --> 00:25:04,220
entropy of the combined system that would be able

339
00:25:04,220 --> 00:25:05,180
to say it was.

340
00:25:07,880 --> 00:25:13,970
At least as large as the entropy of the two

341
00:25:13,970 --> 00:25:18,020
subsystems treated independently, and it can

342
00:25:18,020 --> 00:25:23,120
actually be interesting to dig into this overall,

343
00:25:23,120 --> 00:25:25,900
also a bit more detail.

344
00:25:28,140 --> 00:25:29,400
And try to.

345
00:25:31,760 --> 00:25:34,920
Need some intuition or some appreciation for the

346
00:25:34,920 --> 00:25:39,960
role of large numbers in statistical physics and

347
00:25:39,960 --> 00:25:43,530
especially in. Its application to

348
00:25:45,660 --> 00:25:51,330
the entry of two identical systems that are

349
00:25:51,990 --> 00:25:54,660
combined and brought into triple contact, allowed

350
00:25:54,660 --> 00:25:58,160
to exchange energy from one to the other.

351
00:26:03,270 --> 00:26:04,260
So we have.

352
00:26:06,990 --> 00:26:13,490
The rewrite. That's some. You talk about assistant

353
00:26:13,490 --> 00:26:18,820
energy as the. Now, use of energy, the system when

354
00:26:18,830 --> 00:26:24,560
you take. Timeously. Number of microstates in

355
00:26:24,750 --> 00:26:29,700
system one with that energy. Multiplied by.

356
00:26:31,610 --> 00:26:34,060
Microstates from System two, with that same

357
00:26:34,060 --> 00:26:34,840
Hitachi's,

358
00:26:37,690 --> 00:26:45,510
we cannot impose not only a lower bound. On this,

359
00:26:46,430 --> 00:26:53,650
but also Benham's on both sides of. By supposing

360
00:26:53,650 --> 00:26:58,840
that we know what the maximum term this is, so.

361
00:27:01,790 --> 00:27:02,690
Let's.

362
00:27:06,500 --> 00:27:08,540
I'm just trying to think of a good notation to

363
00:27:08,540 --> 00:27:10,330
write this down.

364
00:27:16,220 --> 00:27:23,720
But, Max. We find this to be the maximum value for

365
00:27:23,730 --> 00:27:29,000
any value of each one of these products that we're

366
00:27:29,020 --> 00:27:31,890
microstates and systems one and two with the

367
00:27:31,890 --> 00:27:36,090
overall conservation of energy on the combined

368
00:27:36,090 --> 00:27:36,600
system.

369
00:27:38,870 --> 00:27:45,230
Adding up to some 60. Ben. You know, first of all,

370
00:27:45,230 --> 00:27:50,550
that. This, Max, is only a single term in itself,

371
00:27:50,570 --> 00:27:56,750
so just as with the case of. The independent

372
00:27:57,260 --> 00:28:00,470
system is showing up in the election, we know that.

373
00:28:01,500 --> 00:28:05,790
The song as a whole is at least as large as the

374
00:28:05,790 --> 00:28:09,720
musical term limits, but because we have.

375
00:28:11,030 --> 00:28:13,640
Identified this particular term as the largest

376
00:28:13,640 --> 00:28:19,040
term, we also know that. This end has to be

377
00:28:19,040 --> 00:28:22,130
smaller than the overall number of terms.

378
00:28:26,250 --> 00:28:31,020
I would just call in terms of the risk of using

379
00:28:31,370 --> 00:28:35,230
using an interest in many things, so the number of

380
00:28:35,230 --> 00:28:39,990
terms. Times the word has turned into something so

381
00:28:40,210 --> 00:28:43,750
that all is fairly obvious on.

382
00:28:46,120 --> 00:28:51,970
And it is possible for this inequality to be

383
00:28:51,970 --> 00:28:55,960
inequality can be saturated when every turn in the

384
00:28:55,960 --> 00:28:58,870
sun, every one of those entrance terms has that

385
00:28:58,870 --> 00:29:00,280
same maximum about.

386
00:29:02,520 --> 00:29:11,770
And. In practice, some examples that. Illustrate.

387
00:29:13,430 --> 00:29:16,460
What these gowns can be.

388
00:29:19,460 --> 00:29:20,360
And as a.

389
00:29:22,610 --> 00:29:25,790
In terms of absolute numbers, they are rather

390
00:29:25,790 --> 00:29:29,090
large because we're always with large numbers of

391
00:29:29,120 --> 00:29:31,160
degrees of freedom and responding with large

392
00:29:31,160 --> 00:29:36,830
numbers of microstates, but the relative range

393
00:29:36,830 --> 00:29:39,550
here can be surprisingly sharp.

394
00:29:49,610 --> 00:29:50,300
Maybe a.

395
00:29:57,190 --> 00:29:58,130
It's great that the.

396
00:30:03,160 --> 00:30:06,500
This can be a relatively tight.

397
00:30:08,720 --> 00:30:12,230
Now, the total number of microstates for combined

398
00:30:12,230 --> 00:30:15,140
system and just as a.

399
00:30:18,560 --> 00:30:19,160
Wolf.

400
00:30:22,590 --> 00:30:24,120
A qualitative example.

401
00:30:28,970 --> 00:30:35,190
We supposed. That subsystem has in degrees of

402
00:30:35,190 --> 00:30:39,680
freedom, which is different. Well. You're going to

403
00:30:39,680 --> 00:30:42,640
identify that with the number of terms in this.

404
00:30:44,300 --> 00:30:48,080
Then we can expect that this is not a proof, but a

405
00:30:48,320 --> 00:30:54,920
very handwaving quality, the argument can expect

406
00:30:54,920 --> 00:30:55,580
that the.

407
00:30:57,740 --> 00:30:58,290
On.

408
00:31:01,350 --> 00:31:02,070
Maximum.

409
00:31:07,220 --> 00:31:09,950
Number of microstates in this combined system

410
00:31:10,460 --> 00:31:15,410
should have. Left room for Few's, exponentially

411
00:31:15,410 --> 00:31:18,400
large in that number of degrees of freedom.

412
00:31:21,040 --> 00:31:25,960
And also that the number of terms you can expect,

413
00:31:25,960 --> 00:31:30,020
the number of hospital. Ways of distributing

414
00:31:30,020 --> 00:31:33,650
energy between these two systems is going to

415
00:31:34,340 --> 00:31:40,850
depend more. Like a linear dependence on a number

416
00:31:40,850 --> 00:31:43,850
of degrees of freedom rather than the

417
00:31:43,850 --> 00:31:49,050
exponentially large. No, microstates, so the

418
00:31:49,590 --> 00:31:54,980
inequality. That we have with state of the usual

419
00:31:54,980 --> 00:31:59,200
order, ten of twenty three. More coming from our

420
00:31:59,440 --> 00:32:03,040
is no motivated for statistical physics, this

421
00:32:03,040 --> 00:32:05,950
bound comes down to become.

422
00:32:08,260 --> 00:32:09,160
Ten to the power.

423
00:32:12,170 --> 00:32:17,760
Exponential even handed out twenty three squiggly

424
00:32:17,760 --> 00:32:19,380
lines there.

425
00:32:26,660 --> 00:32:27,230
So.

426
00:32:29,230 --> 00:32:33,760
In absolute terms, there is a wide range of ten to

427
00:32:33,760 --> 00:32:36,610
twenty three or twenty three orders of magnitude

428
00:32:37,120 --> 00:32:41,910
from one side and. Of this inequality to the other,

429
00:32:42,270 --> 00:32:43,290
if we look at the.

430
00:32:45,700 --> 00:32:49,450
Entropies so. And requires taking the law of the

431
00:32:49,650 --> 00:32:52,310
with microstates, you know that.

432
00:32:55,150 --> 00:32:57,130
The logarithm of the exponential is just the

433
00:32:57,220 --> 00:33:01,540
arguments. Twenty three is roughly smaller than

434
00:33:01,540 --> 00:33:04,600
the entropy of this combined system, which we know

435
00:33:04,600 --> 00:33:09,900
is roughly smaller than that same. By the end of

436
00:33:09,900 --> 00:33:10,820
the twenty three.

437
00:33:12,870 --> 00:33:18,510
Plus, the longer ten to the twenty three, which is.

438
00:33:19,920 --> 00:33:23,940
What are those numbers that you get used to if you

439
00:33:23,940 --> 00:33:26,550
do enough statistical physics, it's ten to twenty

440
00:33:26,550 --> 00:33:32,180
three plus about 50. So the entropy here in here

441
00:33:32,190 --> 00:33:35,940
coming from that range microstates is somewhere

442
00:33:35,940 --> 00:33:39,240
between ten to the twenty three instead of twenty

443
00:33:39,240 --> 00:33:41,970
three point fifty, which is to a very good

444
00:33:41,970 --> 00:33:44,970
approximation, still ten to twenty three. So in

445
00:33:44,970 --> 00:33:50,210
relative terms. There's a very narrow band of

446
00:33:50,210 --> 00:33:55,840
entropies, and indeed we can say, is that the. The

447
00:33:55,840 --> 00:33:59,470
single next midterm in the summer, all

448
00:33:59,470 --> 00:34:04,460
possibilities. Provides a good approximation, it

449
00:34:04,460 --> 00:34:07,310
almost separates the whole entropy of this whole

450
00:34:07,310 --> 00:34:11,730
system. And this is going ahead with the arguments

451
00:34:12,360 --> 00:34:16,410
sort of claiming that the.

452
00:34:18,570 --> 00:34:21,110
Numbers of microstates scale exponentially the

453
00:34:21,120 --> 00:34:25,340
numbers, its renewable energy scale linearly. And

454
00:34:25,340 --> 00:34:29,570
this is something that you can actually compute

455
00:34:29,600 --> 00:34:34,520
for yourself in a in some simple examples, which.

456
00:34:35,800 --> 00:34:39,100
We will get a start on that for the remainder of

457
00:34:39,100 --> 00:34:43,830
today and check in on that. How things are doing

458
00:34:44,290 --> 00:34:48,790
next week, I'll show I was able to come up with

459
00:34:48,790 --> 00:34:55,230
four. An example of this or more specific. Example

460
00:34:55,230 --> 00:35:02,150
of these sorts of battles. Or. Suppose we have a

461
00:35:02,150 --> 00:35:05,270
system, one is.

462
00:35:07,360 --> 00:35:12,860
Ten of those two states spends. In that magnetic

463
00:35:12,860 --> 00:35:19,080
field, we are for convenience with a set age to be

464
00:35:19,100 --> 00:35:24,150
born that. So that's he drops out of expressions,

465
00:35:25,080 --> 00:35:30,930
we know that the energy one you see it is minus

466
00:35:30,930 --> 00:35:36,360
two times the number of spins that align with that

467
00:35:36,360 --> 00:35:41,460
magnetic field, minus the total number of spins.

468
00:35:43,610 --> 00:35:46,940
To those in parentheses, the minus age, which is

469
00:35:46,940 --> 00:35:52,170
one stays out, sorry about that. And that will

470
00:35:52,170 --> 00:35:52,920
also be.

471
00:35:55,150 --> 00:36:01,520
The identical system for. That's to to the energy

472
00:36:02,000 --> 00:36:03,980
of system two is that same?

473
00:36:06,420 --> 00:36:07,530
Mine is twice.

474
00:36:09,590 --> 00:36:15,720
Plus, it's just a one minus the. And it ten in

475
00:36:15,720 --> 00:36:16,440
each system.

476
00:36:18,730 --> 00:36:19,330
So

477
00:36:21,910 --> 00:36:25,390
we bring these two systems together.

478
00:36:32,210 --> 00:36:36,370
And allow them to exchange energy in verbal

479
00:36:36,380 --> 00:36:37,120
contact.

480
00:36:44,500 --> 00:36:53,080
And. Fixing the total energy one plus two to be a

481
00:36:53,080 --> 00:36:54,180
C minus 10.

482
00:36:58,270 --> 00:36:59,260
The question is.

483
00:37:03,340 --> 00:37:05,080
What do those inequality's?

484
00:37:07,720 --> 00:37:09,970
What our inequalities.

485
00:37:12,640 --> 00:37:15,190
For the balance on.

486
00:37:17,860 --> 00:37:18,790
The Entropa.

487
00:37:20,810 --> 00:37:25,460
Compared to the true entropy, so that spin comes

488
00:37:25,460 --> 00:37:29,870
from approximating the total number of microstates

489
00:37:29,870 --> 00:37:34,340
in the combined system just by being the single

490
00:37:34,340 --> 00:37:40,860
largest. Term in the overall somewhere in this mix

491
00:37:41,100 --> 00:37:46,340
comes from. Approximating every single term in

492
00:37:46,340 --> 00:37:49,220
that cell to be maximally large.

493
00:37:52,080 --> 00:37:56,480
And that is the question I will. Back to you to go

494
00:37:56,520 --> 00:38:00,060
to work out for the next 10 minutes and possibly

495
00:38:00,070 --> 00:38:05,130
the next week, depending on how quickly we're able

496
00:38:05,130 --> 00:38:08,640
to get through it, and then we can generalize.

497
00:38:11,180 --> 00:38:20,850
To. The situation, if. And he pulls 20 or 40 or

498
00:38:21,000 --> 00:38:27,280
higher numbers. In. Each of those systems.

499
00:38:29,320 --> 00:38:31,330
Still with the total

500
00:38:33,460 --> 00:38:34,930
combined energy fixed.

501
00:38:39,850 --> 00:38:43,440
So you have to keep that on the screens.

502
00:38:47,230 --> 00:38:50,470
Sorry that this kid was not projecting as well as

503
00:38:50,470 --> 00:38:55,920
it ought to, hopefully. As I talked through that

504
00:38:55,920 --> 00:38:59,820
cell, it made enough sense for you to follow up on

505
00:39:00,300 --> 00:39:03,030
any questions about that task.

506
00:39:16,010 --> 00:39:21,890
What was that? Yeah, that's why I the.

507
00:39:25,230 --> 00:39:29,760
Turn the lights away. What I can do is repeat at

508
00:39:29,760 --> 00:39:33,330
least the test itself on the word.

509
00:39:37,660 --> 00:39:40,930
Stood on this side of the border, should be

510
00:39:40,930 --> 00:39:46,480
checked out in that was made here so

511
00:39:48,590 --> 00:39:51,220
we could have a system number one

512
00:39:53,590 --> 00:39:53,980
to

513
00:40:00,360 --> 00:40:02,810
10 spins

514
00:40:05,090 --> 00:40:06,480
and then

515
00:40:08,620 --> 00:40:12,190
falling behind. That projector which I made.

516
00:40:14,310 --> 00:40:16,470
It's true that it not eligible for.

517
00:40:20,710 --> 00:40:24,980
So what to do, they're going to contact.

518
00:40:39,950 --> 00:40:41,190
Utah energy that

519
00:40:44,170 --> 00:40:44,600
you want

520
00:40:48,010 --> 00:40:48,320
to

521
00:40:51,120 --> 00:40:51,320
to.

522
00:40:55,200 --> 00:41:01,460
There was some positive news that wasn't equal to

523
00:41:01,460 --> 00:41:01,880
one.

524
00:41:04,050 --> 00:41:08,130
And from the building arguments that we just went

525
00:41:08,130 --> 00:41:08,630
through.

526
00:41:12,910 --> 00:41:15,580
Showed how in the colonies,

527
00:41:17,740 --> 00:41:18,130
the

528
00:41:20,320 --> 00:41:24,550
entropy of this combined system can be executed by

529
00:41:24,550 --> 00:41:25,870
considering both the.

530
00:41:28,930 --> 00:41:32,500
Single distribution of these interviews with the

531
00:41:32,500 --> 00:41:35,980
largest number of microstates, as well as keeping

532
00:41:35,980 --> 00:41:37,930
track of the number of homes missing,

533
00:41:44,800 --> 00:41:51,000
and that gives us more than the average.

534
00:41:53,140 --> 00:41:58,480
It's also not too hard in this situation with just

535
00:41:58,480 --> 00:42:01,810
about 10 minutes to determine the crew

536
00:42:04,480 --> 00:42:05,380
as well, and

537
00:42:09,880 --> 00:42:14,380
that we would find if we assume that every term in

538
00:42:14,380 --> 00:42:19,000
the sub had its maximum value and we had prepared,

539
00:42:19,630 --> 00:42:24,470
how good about this one comes first for any of

540
00:42:24,490 --> 00:42:29,050
those 10 which can be dealt with just a bit of.

541
00:42:31,620 --> 00:42:36,150
Computation by hand, binomial coefficients will

542
00:42:36,150 --> 00:42:39,750
become useful, and if that is done,

543
00:42:41,940 --> 00:42:42,350
you.

544
00:42:44,950 --> 00:42:48,850
Or larger numbers of students in each of the two

545
00:42:48,850 --> 00:42:52,510
systems still with the same strategy.

546
00:42:57,550 --> 00:42:57,850
So.

547
00:43:13,280 --> 00:43:16,640
Or at least pause the recording and stop talking

548
00:43:16,880 --> 00:43:17,240
to.

549
00:43:25,220 --> 00:43:29,240
I get the sense that done at this point, there was

550
00:43:29,240 --> 00:43:32,750
not much time left over after that happened and

551
00:43:32,750 --> 00:43:33,080
the.

552
00:43:35,200 --> 00:43:37,750
Introduction to the problem, so I'll leave it to

553
00:43:37,750 --> 00:43:41,230
you to think about it. We can pick up with it this

554
00:43:41,230 --> 00:43:42,490
time next Friday

555
00:43:44,680 --> 00:43:48,430
or over the weekend, on Monday.
